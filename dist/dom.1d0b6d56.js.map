{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","console","log","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom={\r\n    //显示一个元素，  const div=dom.create(\"div\")\r\n    //  create(tagName){\r\n    //     // return document.createElement(tagName);\r\n    // }\r\n\r\n    //可以写成这样const div=dom.create(\"<div><span>1</span></div>\")\r\n    // create(string){\r\n    //     const container=document.createElement(\"div\");\r\n    //     container.innerHTML=string;\r\n    //     return container.children[0];\r\n    // }\r\n\r\n    //div不能显示td,要搭配table一起用;template可以显示td,用来容纳任意元素\r\n    // 用template不能用children来获取\r\n    create(string){\r\n        // 创建节点\r\n        const container=document.createElement(\"template\");\r\n        container.innerHTML=string.trim();//trim去掉字符串两边的空格\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        // node2插到node的后面，在node节点后面需新增node2节点\r\n       // console.log(node.nextSibling)//没有下一个节点业适用，如果元素紧跟后面没有节点则返回 null\r\n        node.parentNode.insertBefore(node2,node.nextSibling)//把node2插到node紧跟的节点的前面，即插到node的后面\r\n    //  node.parentNode.insertBefore(node2,node)//node2插到node前面\r\n    },\r\n    before(node,node2){\r\n       // node2插到node的前面,node和node2是兄弟关系\r\n       node.parentNode.insertBefore(node2,node)\r\n    },\r\n    append(parent,node){\r\n        // 加子元素、后代\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent)//先兄弟关系\r\n        dom.append(parent,node)//再变成父子关系\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){\r\n        // 删除所有子节点\r\n        //不能用for循环，每次length会变，用while循坏\r\n        const {childNodes}=node//const childNodes=node.childNodes的简写\r\n        const array=[]\r\n        let x=node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x=node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node,name,value){\r\n        // 重载，根据参数的个数写相应代码\r\n        if(arguments.length===3){\r\n            // 设置节点属性\r\n          node.setAttribute(name,value)\r\n        }else if(arguments.length===2){\r\n            // 读取属性值\r\n           return node.getAttribute(name) \r\n        }\r\n    },\r\n    text(node,string){//适配，兼容IE和其他浏览器\r\n        // 读写内容,里面的标签也会改了\r\n        console.log('innerText' in node)\r\n        if(arguments.length===2){\r\n            //改写内容\r\n            if('innerText' in node){\r\n                node.innerText=string//ie\r\n            }else{\r\n                node.textContent=string//firefox、Chrome\r\n            }\r\n        }else if(arguments.length===1){\r\n            //读取内容\r\n            if('innerText' in node){\r\n               return node.innerText\r\n            }else{\r\n               return node.textContent\r\n            }\r\n        }  \r\n    },\r\n    html(node,string){\r\n        if(arguments.length===2){\r\n            node.innerHTML=string\r\n        }else if(arguments.length===1){\r\n           return node.innerHTML\r\n        }\r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length===3){\r\n            //dom.style(div,'color','red')，修改某个属性的样式,或添加样式\r\n            node.style[name]=value\r\n        }else if(arguments.length===2){\r\n            if(typeof name==='string')\r\n            {\r\n                //dom.style(div,'color'),查询属性的样式\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                //dom.style(div,{color:'red'}),第二个属性为对象，则为添加或修改节点的样式\r\n                const object=name\r\n                for(let key in object){\r\n                    node.style[key]=object[key]\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){\r\n            return node.classList.contains(className)//查询是否有该类\r\n        }\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector,scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n=>n!=node)\r\n    },\r\n    next(node){\r\n        let x=node.nextSibling\r\n        while(x && x.nodeType===3){// 搜nodeType MDN，3代表文本\r\n            x=x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x=node.previousSibling\r\n        while(x && x.nodeType===3){// 搜nodeType MDN，3代表文本\r\n            x=x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        \r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n      let i \r\n      const list =dom.children(node.parentNode)  \r\n      for(i=0;i<list.length;i++){\r\n          if(list[i]===node){\r\n              break;\r\n          }\r\n      }\r\n      return i\r\n    }\r\n};"]}